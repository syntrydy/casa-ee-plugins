package org.gluu.casa.plugins.consent.ldap;

import com.unboundid.ldap.sdk.ReadOnlyEntry;
import com.unboundid.ldap.sdk.persist.FilterUsage;
import com.unboundid.ldap.sdk.persist.LDAPEntryField;
import com.unboundid.ldap.sdk.persist.LDAPField;
import com.unboundid.ldap.sdk.persist.LDAPObject;

/**
 * This class provides an implementation of an object that can be used to
 * represent oxAuthToken objects in the directory.
 * It was generated by the generate-source-from-schema tool provided with the
 * UnboundID LDAP SDK for Java.  It may be customized as desired to better suit
 * your needs.
 */
@LDAPObject(structuralClass="oxAuthToken",
            superiorClass="top")
public class Token {

  // The field to use to hold a read-only copy of the associated entry.
  @LDAPEntryField
  private ReadOnlyEntry ldapEntry;

  // The field used for RDN attribute uniqueIdentifier.
  @LDAPField(inRDN=true,
             filterUsage=FilterUsage.ALWAYS_ALLOWED,
             requiredForEncode=true)
  private String[] uniqueIdentifier;

  // The field used for optional attribute oxAuthClientId.
  @LDAPField(filterUsage= FilterUsage.ALWAYS_ALLOWED)
  private String[] oxAuthClientId;

  // The field used for optional attribute oxAuthTokenType.
  @LDAPField(filterUsage= FilterUsage.ALWAYS_ALLOWED)
  private String[] oxAuthTokenType;

  // The field used for optional attribute oxAuthUserId.
  @LDAPField(filterUsage= FilterUsage.ALWAYS_ALLOWED)
  private String[] oxAuthUserId;

    /**
     * Retrieves the first value for the field associated with the
     * uniqueIdentifier attribute, if present.
     *
     * @return  The first value for the field associated with the
     *          uniqueIdentifier attribute, or
     *          {@code null} if that attribute was not present in the entry or
     *          does not have any values.
     */
    public String getUniqueIdentifier()
    {
        if ((uniqueIdentifier == null) ||
                (uniqueIdentifier.length == 0))
        {
            return null;
        }
        else
        {
            return uniqueIdentifier[0];
        }
    }

  /**
   * Sets the values for the field associated with the
   * oxAuthClientId attribute.
   *
   * @param  v  The values for the field associated with the
   *            oxAuthClientId attribute.
   */
  public void setOxAuthClientId(final String... v)
  {
    this.oxAuthClientId = v;
  }

  /**
   * Sets the values for the field associated with the
   * oxAuthTokenType attribute.
   *
   * @param  v  The values for the field associated with the
   *            oxAuthTokenType attribute.
   */
  public void setOxAuthTokenType(final String... v)
  {
    this.oxAuthTokenType = v;
  }

  /**
   * Sets the values for the field associated with the
   * oxAuthUserId attribute.
   *
   * @param  v  The values for the field associated with the
   *            oxAuthUserId attribute.
   */
  public void setOxAuthUserId(final String... v)
  {
    this.oxAuthUserId = v;
  }

}
